import {
  AddUserProfileDark,
  AddUserProfileLight,
  CodeErrorDark,
  CodeErrorLight,
  DataDark,
  DataLight,
  DevicesDark,
  DevicesLight,
  DragMenuItemDark,
  DragMenuItemLight,
  EmptyFolderDark,
  EmptyFolderLight,
  EmptyGeneralDark,
  EmptyGeneralLight,
  EmptySpaceDark,
  EmptySpaceLight,
  FileMissingDark,
  FileMissingLight,
  MediaDark,
  MediaLight,
  MenuItemFocusDark,
  MenuItemFocusLight,
  NoAccessDark,
  NoAccessLight,
  NoConnectionDark,
  NoConnectionLight,
  NoContentDark,
  NoContentLight,
  NoMatchDark,
  NoMatchGeneralDark,
  NoMatchGeneralLight,
  NoMatchLight,
  NoSitesDark,
  NoSitesLight,
  NotFoundDark,
  NotFoundLight,
  ProhibitedDark,
  ProhibitedLight,
  SettingsDark,
  SettingsLight,
  SuccessDark,
  SuccessLight,
  TeamDark,
  TeamLight,
  UnderConstructionDark,
  UnderConstructionLight,
  bundleIllustrationSmart,
} from "@axiscommunications/fluent-illustrations";
import { IllustrationKind } from "./types.js";

export const Illustration: Record<
  IllustrationKind,
  ReturnType<typeof bundleIllustrationSmart>
> = {
  "add-user-profile": bundleIllustrationSmart(
    AddUserProfileDark,
    AddUserProfileLight
  ),
  "drag-menu": bundleIllustrationSmart(DragMenuItemDark, DragMenuItemLight),
  "code-error": bundleIllustrationSmart(CodeErrorDark, CodeErrorLight),
  "menu-item-focus": bundleIllustrationSmart(
    MenuItemFocusDark,
    MenuItemFocusLight
  ),
  data: bundleIllustrationSmart(DataDark, DataLight),
  devices: bundleIllustrationSmart(DevicesDark, DevicesLight),
  "empty-folder": bundleIllustrationSmart(EmptyFolderDark, EmptyFolderLight),
  "empty-space": bundleIllustrationSmart(EmptySpaceDark, EmptySpaceLight),
  "file-missing": bundleIllustrationSmart(FileMissingDark, FileMissingLight),
  general: bundleIllustrationSmart(EmptyGeneralDark, EmptyGeneralLight),
  media: bundleIllustrationSmart(MediaDark, MediaLight),
  "no-access": bundleIllustrationSmart(NoAccessDark, NoAccessLight),
  "no-connection": bundleIllustrationSmart(NoConnectionDark, NoConnectionLight),
  "no-content": bundleIllustrationSmart(NoContentDark, NoContentLight),
  "no-match": bundleIllustrationSmart(NoMatchDark, NoMatchLight),
  "no-match-general": bundleIllustrationSmart(
    NoMatchGeneralDark,
    NoMatchGeneralLight
  ),
  "no-sites": bundleIllustrationSmart(NoSitesDark, NoSitesLight),
  "not-found": bundleIllustrationSmart(NotFoundDark, NotFoundLight),
  prohibited: bundleIllustrationSmart(ProhibitedDark, ProhibitedLight),
  settings: bundleIllustrationSmart(SettingsDark, SettingsLight),
  success: bundleIllustrationSmart(SuccessDark, SuccessLight),
  team: bundleIllustrationSmart(TeamDark, TeamLight),
  "under-construction": bundleIllustrationSmart(
    UnderConstructionDark,
    UnderConstructionLight
  ),
} as const;
